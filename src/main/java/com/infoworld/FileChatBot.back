package com.infoworld;

import java.io.File;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.List;

import org.apache.http.HttpEntity;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.ContentType;
import org.apache.http.entity.mime.MultipartEntityBuilder;
import org.apache.http.entity.mime.content.FileBody;
import org.apache.http.entity.mime.content.StringBody;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import com.google.gson.Gson;

public class FileChatBot {
  public static String sendQuery(String filepath, String endpoint, String apiKey) throws IOException, JSONException {

      // Build file and API key params
      File file = new File(filepath);
      FileBody fileBody = new FileBody(file, ContentType.DEFAULT_BINARY);
      StringBody apiKeyParam = new StringBody(apiKey, ContentType.TEXT_PLAIN);

      // Build POST request
      HttpEntity reqEntity = MultipartEntityBuilder.create()
                              .addPart("document", fileBody)
                              .addPart("api_key", apiKeyParam)
                              .build();

      HttpPost post = new HttpPost(endpoint);
      post.setEntity(reqEntity);

      // Send POST request and parse response
      try (CloseableHttpClient httpClient = HttpClients.createDefault();
          CloseableHttpResponse response = httpClient.execute(post)) {

          HttpEntity resEntity = response.getEntity();
          String resJsonString = new String(resEntity.getContent().readAllBytes(), StandardCharsets.UTF_8);
          JSONObject resJson = new JSONObject(resJsonString);

          // Parse JSON response
          JSONArray responseArray = resJson.getJSONArray("response");
          List<String> responseList = new ArrayList<>();
          for (int i = 0; i < responseArray.length(); i++) {
              JSONObject responseObj = responseArray.getJSONObject(i);
              String responseString = responseObj.getString("text");
              responseList.add(responseString);
          }

          // Convert response list to JSON and return it
          Gson gson = new Gson();
          String jsonResponse = gson.toJson(responseList);
          return jsonResponse;
      }
  }
}

